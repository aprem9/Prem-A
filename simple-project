# Project on Oops concept 
# step 1 : Defining a class
class Task:
    def __init__(self, title, description):
        self.title = title
        self.description = description
        self.completed = False

    def mark_complete(self):
        self.completed = True

    def __str__(self):
        status = "Completed" if self.completed else "Not Completed"
        return f"{self.title}: {self.description} [{status}]"

# Step 2 : Creating an object of the class
class ToDoList:
    def __init__(self):
        self.tasks = []

    def add_task(self, task):
        self.tasks.append(task)

    def remove_task(self, task_title):
        self.tasks = [task for task in self.tasks if task.title != task_title]

    def get_all_tasks(self):
        return self.tasks

    def get_completed_tasks(self):
        return [task for task in self.tasks if task.completed]

    def get_pending_tasks(self):
        return [task for task in self.tasks if not task.completed]
    

# Step 3 : Create & manage tasks
todo_list = ToDoList()

# Create some tasks
task1 = Task("Buy groceries", "Milk, Bread, Eggs")
task2 = Task("Read book", "Read 'The 5 AM Club'")
task3 = Task("Exercise", "Go for a 30-minute run")

# Add tasks to the to-do list
todo_list.add_task(task1)
todo_list.add_task(task2)
todo_list.add_task(task3)

# Mark a task as complete
task1.mark_complete()

# Display all tasks
print("All Tasks:")
for task in todo_list.get_all_tasks():
    print(task)

# Display completed tasks
print("\nCompleted Tasks:")
for task in todo_list.get_completed_tasks():
    print(task)

# Display pending tasks
print("\nPending Tasks:")
for task in todo_list.get_pending_tasks():
    print(task)



O/p 
All Tasks:
Buy groceries: Milk, Bread, Eggs [Completed]
Read book: Read 'The 5 AM Club' [Not Completed]
Exercise: Go for a 30-minute run [Not Completed]

Completed Tasks:
Buy groceries: Milk, Bread, Eggs [Completed]

Pending Tasks:
Read book: Read 'The 5 AM Club' [Not Completed]
Exercise: Go for a 30-minute run [Not Completed]
